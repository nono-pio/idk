//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.13.2
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from myGrammar.g4 by ANTLR 4.13.2

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419


using Antlr4.Runtime.Misc;
using IErrorNode = Antlr4.Runtime.Tree.IErrorNode;
using ITerminalNode = Antlr4.Runtime.Tree.ITerminalNode;
using IToken = Antlr4.Runtime.IToken;
using ParserRuleContext = Antlr4.Runtime.ParserRuleContext;

/// <summary>
/// This class provides an empty implementation of <see cref="ImyGrammarListener"/>,
/// which can be extended to create a listener which only needs to handle a subset
/// of the available methods.
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.13.2")]
[System.Diagnostics.DebuggerNonUserCode]
[System.CLSCompliant(false)]
public partial class myGrammarBaseListener : ImyGrammarListener {
	/// <summary>
	/// Enter a parse tree produced by <see cref="myGrammarParser.program"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterProgram([NotNull] myGrammarParser.ProgramContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="myGrammarParser.program"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitProgram([NotNull] myGrammarParser.ProgramContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="myGrammarParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterExpr([NotNull] myGrammarParser.ExprContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="myGrammarParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitExpr([NotNull] myGrammarParser.ExprContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="myGrammarParser.addition"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAddition([NotNull] myGrammarParser.AdditionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="myGrammarParser.addition"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAddition([NotNull] myGrammarParser.AdditionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="myGrammarParser.multiplication"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterMultiplication([NotNull] myGrammarParser.MultiplicationContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="myGrammarParser.multiplication"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitMultiplication([NotNull] myGrammarParser.MultiplicationContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="myGrammarParser.unary"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterUnary([NotNull] myGrammarParser.UnaryContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="myGrammarParser.unary"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitUnary([NotNull] myGrammarParser.UnaryContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="myGrammarParser.unarysufix"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterUnarysufix([NotNull] myGrammarParser.UnarysufixContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="myGrammarParser.unarysufix"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitUnarysufix([NotNull] myGrammarParser.UnarysufixContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="myGrammarParser.suffix"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSuffix([NotNull] myGrammarParser.SuffixContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="myGrammarParser.suffix"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSuffix([NotNull] myGrammarParser.SuffixContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="myGrammarParser.power"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterPower([NotNull] myGrammarParser.PowerContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="myGrammarParser.power"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitPower([NotNull] myGrammarParser.PowerContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="myGrammarParser.power_nofunc"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterPower_nofunc([NotNull] myGrammarParser.Power_nofuncContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="myGrammarParser.power_nofunc"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitPower_nofunc([NotNull] myGrammarParser.Power_nofuncContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="myGrammarParser.atom"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAtom([NotNull] myGrammarParser.AtomContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="myGrammarParser.atom"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAtom([NotNull] myGrammarParser.AtomContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="myGrammarParser.atom_nofunc"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAtom_nofunc([NotNull] myGrammarParser.Atom_nofuncContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="myGrammarParser.atom_nofunc"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAtom_nofunc([NotNull] myGrammarParser.Atom_nofuncContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="myGrammarParser.function"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFunction([NotNull] myGrammarParser.FunctionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="myGrammarParser.function"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFunction([NotNull] myGrammarParser.FunctionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="myGrammarParser.func_args"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFunc_args([NotNull] myGrammarParser.Func_argsContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="myGrammarParser.func_args"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFunc_args([NotNull] myGrammarParser.Func_argsContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="myGrammarParser.abs"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAbs([NotNull] myGrammarParser.AbsContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="myGrammarParser.abs"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAbs([NotNull] myGrammarParser.AbsContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="myGrammarParser.intfunc"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterIntfunc([NotNull] myGrammarParser.IntfuncContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="myGrammarParser.intfunc"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitIntfunc([NotNull] myGrammarParser.IntfuncContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="myGrammarParser.frac"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFrac([NotNull] myGrammarParser.FracContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="myGrammarParser.frac"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFrac([NotNull] myGrammarParser.FracContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="myGrammarParser.sqrt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSqrt([NotNull] myGrammarParser.SqrtContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="myGrammarParser.sqrt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSqrt([NotNull] myGrammarParser.SqrtContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="myGrammarParser.subexpr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSubexpr([NotNull] myGrammarParser.SubexprContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="myGrammarParser.subexpr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSubexpr([NotNull] myGrammarParser.SubexprContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="myGrammarParser.supexpr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSupexpr([NotNull] myGrammarParser.SupexprContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="myGrammarParser.supexpr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSupexpr([NotNull] myGrammarParser.SupexprContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="myGrammarParser.parenthesis"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterParenthesis([NotNull] myGrammarParser.ParenthesisContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="myGrammarParser.parenthesis"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitParenthesis([NotNull] myGrammarParser.ParenthesisContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="myGrammarParser.number"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterNumber([NotNull] myGrammarParser.NumberContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="myGrammarParser.number"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitNumber([NotNull] myGrammarParser.NumberContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="myGrammarParser.variable"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterVariable([NotNull] myGrammarParser.VariableContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="myGrammarParser.variable"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitVariable([NotNull] myGrammarParser.VariableContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="myGrammarParser.letter"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterLetter([NotNull] myGrammarParser.LetterContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="myGrammarParser.letter"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitLetter([NotNull] myGrammarParser.LetterContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="myGrammarParser.mul"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterMul([NotNull] myGrammarParser.MulContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="myGrammarParser.mul"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitMul([NotNull] myGrammarParser.MulContext context) { }

	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void EnterEveryRule([NotNull] ParserRuleContext context) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void ExitEveryRule([NotNull] ParserRuleContext context) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void VisitTerminal([NotNull] ITerminalNode node) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void VisitErrorNode([NotNull] IErrorNode node) { }
}
